version: '3.8'

services:

  app:
    container_name: go-fiber-app
    image: go-fiber-example-v2:latest
    depends_on:
      - postgres
      - otel-collector
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    networks:
      - observability
    ports:
      - "3000:3000"

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.123.0
    container_name: otel-collector
    volumes:
      - ./otel-config.yaml:/etc/otelcol/config.yaml
    command: ["--config=/etc/otelcol/config.yaml"]
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8888:8888"
      - "9464:9464"

    depends_on:
      - jaeger
    restart: always
    networks:
      - observability
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:1.56
    container_name: jaeger
    ports:
      - "16686:16686"
    restart: always
    networks:
      - observability

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--web.enable-remote-write-receiver'
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    networks:
      - monitoring

networks:
  observability:
  monitoring:
